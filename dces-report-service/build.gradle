plugins {
    id 'java'
    id 'jacoco'
    id 'org.springframework.boot' version '3.3.13'
    id 'io.spring.dependency-management' version '1.1.7'
    id "org.sonarqube" version "6.2.0.5505"
    id 'info.solidsoft.pitest' version '1.15.0'
}

def versions = [
        pitestVersion          : '1.20.0',
        sentryVersion          : '8.13.3',
        springdocVersion       : '1.8.0',
        jakartaActivation      : '2.0.1',
        resilience4jVersion    : '2.3.0',
        wiremockVersion        : '3.13.0',
        notifyVersion          : '5.2.1-RELEASE'
]
group = 'uk.gov.justice.laa.crime'

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

project.ext {
    jaxbTargetDir = file("src/main/java")
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    xsd2java
}

repositories {
    mavenCentral()
}

dependencies {
    // Import Maven bills-of-materials (BOM) files as Gradle platforms:
    implementation platform("io.sentry:sentry-bom:$versions.sentryVersion")

    // Spring
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // oAuth
    implementation "org.springframework.security:spring-security-config"
    implementation "org.springframework.security:spring-security-web"
    implementation "org.springframework.boot:spring-boot-starter-oauth2-resource-server"
    implementation "org.springframework.boot:spring-boot-starter-oauth2-client"
    implementation "org.springframework.security:spring-security-oauth2-jose"

    implementation('io.sentry:sentry-spring-boot-starter-jakarta')
    implementation('io.sentry:sentry-logback')

    implementation "org.glassfish.jaxb:jaxb-runtime"

    implementation "org.springdoc:springdoc-openapi-ui:$versions.springdocVersion"
    implementation "io.github.resilience4j:resilience4j-spring-boot3:$versions.resilience4jVersion"

    implementation "uk.gov.service.notify:notifications-java-client:$versions.notifyVersion"

    runtimeOnly "io.micrometer:micrometer-tracing-bridge-brave"
    runtimeOnly "io.micrometer:micrometer-registry-prometheus"
    runtimeOnly "org.postgresql:postgresql"

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    testImplementation "org.pitest:pitest:$versions.pitestVersion"
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    testImplementation 'com.h2database:h2'
    testImplementation "com.squareup.okhttp3:okhttp"
    testImplementation "com.squareup.okhttp3:mockwebserver"
    testImplementation "org.wiremock:wiremock-standalone:$versions.wiremockVersion"
    testImplementation "io.rest-assured:rest-assured:5.3.1"
    testImplementation "io.rest-assured:json-path:5.3.1"
    testImplementation "io.rest-assured:xml-path:5.3.1"
    testImplementation "io.rest-assured:json-schema-validator:5.3.1"
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.9.2'

    xsd2java "com.sun.xml.bind:jaxb-xjc"
    xsd2java "com.sun.xml.bind:jaxb-impl"
    xsd2java "com.sun.xml.bind:jaxb-core"
    xsd2java "com.sun.activation:jakarta.activation:$versions.jakartaActivation"
    xsd2java "jakarta.xml.bind:jakarta.xml.bind-api"
}


test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}


jacoco {
    toolVersion = "0.8.8"
}

tasks.named('test') {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.required = true
        html.required = true
    }
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                    '**/entity/**',
                    '**/dto/**',
                    '**/config/**'
            ])
        }))
    }
}

pitest {
    targetClasses = ['uk.gov.justice.laa.crime.dces.report.*']
    excludedClasses = ['uk.gov.justice.laa.crime.dces.report.DcesReportServiceApplication, uk.gov.justice.laa.crime.dces.report.maatapi.*Client*']
    threads = 5
    outputFormats = ['XML', 'HTML']
    timestampedReports = false
    mutationThreshold = 60
}

test {
    exclude '**/**IntegrationTest.class'
    if (!project.hasProperty('includeE2E')) {
        exclude "uk/gov/justice/laa/crime/dces/e2e/**"
    }
}

sonar {
    properties {
        property "sonar.projectName", "laa-dces-report-service"
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.organization", "ministryofjustice"
        property "sonar.projectKey", "ministryofjustice_laa-dces-report-service"

        property "sonar.exclusions", "**/entity/**.java , **/model/**.java , **/dto/**.java , **/config/**.java, **/jms/**.java,**/exception/**.java,**/handler/**.java,**/maatapi/**Client**.java,**/generated/**"
        property "sonar.coverage.exclusions", "**/DcesReportServiceApplication.java"
        property "sonar.coverage.jacoco.xmlReportPaths",
                "${project.buildDir}/reports/jacoco/test/jacocoTestReport.xml"
    }
}

tasks.register('xsd2java') {
    doLast {
        jaxbTargetDir.mkdirs()

        ant.taskdef(name: 'xjc', classname: 'com.sun.tools.xjc.XJCTask', classpath: configurations.xsd2java.asPath)
        ant.jaxbTargetDir = jaxbTargetDir

        ant.xjc(
                destdir: '${jaxbTargetDir}',
                package: 'uk.gov.justice.laa.crime.dces.report.model.generated',
                schema: 'src/main/resources/contributions.xsd'
        )

        ant.xjc(
                destdir: '${jaxbTargetDir}',
                package: 'uk.gov.justice.laa.crime.dces.report.model.generated',
                schema: 'src/main/resources/fdc.xsd'
        )
    }
}

compileJava.dependsOn xsd2java
