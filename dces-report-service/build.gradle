import java.util.logging.SimpleFormatter

plugins {
	id 'java'
	id 'jacoco'
	id 'org.springframework.boot' version '3.0.5'
	id 'io.spring.dependency-management' version '1.1.0'
	id "org.sonarqube" version "4.0.0.2929"
	id 'info.solidsoft.pitest' version '1.9.11'
}

group = 'uk.gov.justice.laa.crime'

def versions = [
		sentryVersion                      : '6.15.0',
		springdocVersion                   : '1.6.15',
		jaxbXjc                            : '4.0.0',
		jaxbImpl                           : '4.0.0',
		jaxbCore                           : '4.0.0',
		jakartaActivation                  : '2.0.1',
		jakartaXmlBindApi                  : '4.0.0',
		glassfishJaxb                      : '4.0.2'


]

dependencyManagement {
	dependencies {
		dependencySet(group: 'io.sentry', version: versions.sentryVersion) {
			entry 'sentry-spring-boot-starter'
			entry 'sentry-logback'
		}
	}
}

java {
	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

project.ext {
	jaxbTargetDir = file("src/main/java")
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	xsd2java
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation "org.glassfish.jaxb:jaxb-runtime:$versions.glassfishJaxb"
	implementation "com.sun.xml.bind:jaxb-core:$versions.jaxbCore"

	implementation "org.springdoc:springdoc-openapi-ui:$versions.springdocVersion"
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'


	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.junit.jupiter:junit-jupiter-params:5.9.2'

	xsd2java "com.sun.xml.bind:jaxb-xjc:$versions.jaxbXjc"
	xsd2java "com.sun.xml.bind:jaxb-impl:$versions.jaxbImpl"
	xsd2java "com.sun.xml.bind:jaxb-core:$versions.jaxbCore"
	xsd2java "com.sun.activation:jakarta.activation:$versions.jakartaActivation"
	xsd2java "jakarta.xml.bind:jakarta.xml.bind-api:$versions.jakartaXmlBindApi"
}


test {
	useJUnitPlatform()
	finalizedBy jacocoTestReport
}


jacoco {
	toolVersion = "0.8.8"
}
tasks.named('test') {
	useJUnitPlatform()
	finalizedBy jacocoTestReport
}
jacocoTestReport {
	dependsOn test
	reports {
		xml.required = true
		html.required = true
	}
	afterEvaluate {
		classDirectories.setFrom(files(classDirectories.files.collect {
			fileTree(dir: it, exclude: [
					'**/entity/**',
					'**/dto/**',
					'**/config/**'
			])
		}))
	}
}

pitest {
	targetClasses = ['uk.gov.justice.laa.crime.dces.report.*']
	excludedClasses = ['uk.gov.justice.laa.crime.dces.report.DcesReportServiceApplication']
	threads = 5
	outputFormats = ['XML', 'HTML']
	timestampedReports = false
	mutationThreshold = 60
}

tasks['sonarqube'].dependsOn test

sonarqube {
	properties {
		property "sonar.exclusions", "**/entity/**.java , **/model/**.java , **/dto/**.java , **/config/**.java, **/jms/**.java,**/exception/**.java,**/handler/**.java"
		property "sonar.coverage.exclusions", "**/DcesReportServiceApplication.java"
		property "sonar.coverage.jacoco.xmlReportPaths", "${project.buildDir}/reports/jacoco/test/jacocoTestReport.xml"
		property "sonar.projectKey", "ministryofjustice_laa-dces-report-service"
		property "sonar.organization", "ministryofjustice"
		property "sonar.host.url", "https://sonarcloud.io"
		property "sonar.projectName", "laa-dces-report-service"
		property "sonar.pitest.mode", "reuseReport"
		property "sonar.pitest.reportsDirectory", "build/reports/pitest"
	}
}

task xsd2java() {
	doLast {
		jaxbTargetDir.mkdirs()

		ant.taskdef(name: 'xjc', classname: 'com.sun.tools.xjc.XJCTask', classpath: configurations.xsd2java.asPath)
		ant.jaxbTargetDir = jaxbTargetDir

		ant.xjc(
				destdir: '${jaxbTargetDir}',
				package: 'uk.gov.justice.laa.crime.dces.contributions.generated',
				schema: 'src/main/resources/contributions.xsd'
		)
	}
}

compileJava.dependsOn xsd2java
